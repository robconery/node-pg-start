<nav class="top-0 absolute z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg">
  <div class="container px-4 mx-auto flex flex-wrap items-center justify-between">
    <div class="w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start">
      <a class="text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-no-wrap uppercase text-white"
        href="/">Tailwind Starter Kit</a><button
        class="cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block outline-none lg:hidden focus:outline-none"
        type="button" onclick="toggleNavbar('example-collapse-navbar')">
        <i class="text-white fas fa-bars"></i>
      </button>
    </div>
    <div class="flex-grow items-center bg-white hidden lg:flex lg:bg-transparent lg:shadow-none"
      id="example-collapse-navbar">
      <ul class="flex flex-col list-none lg:flex-row lg:ml-auto">
        <li class="flex items-center">
          <a class="text-gray-800 px-3 py-4 flex items-center text-xs uppercase font-bold lg:text-white lg:hover:text-gray-300 lg:py-2"
            href="https://github.com/robconery/node-pg-starter" target="_blank"><i
              class="text-gray-500 fab fa-github text-lg leading-lg lg:text-gray-300"></i><span
              class="inline-block ml-2 lg:hidden">Repo</span></a>
        </li>

        <% if(user) { %>
          <li class="inline-block relative">
            <a class="text-gray-600 block" href="#pablo" onclick="openDropdown(event,'user-responsive-dropdown')">
              <div class="items-center flex">
                <span
                  class="w-12 h-12 text-sm text-white bg-gray-300 inline-flex items-center justify-center rounded-full"><img
                    class="w-full rounded-full align-middle border-none shadow-lg" alt="Rob Conery"
                    src="<%=user.avatar%>" /></span></div>
            </a>
            <div class="hidden bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-1"
              id="user-responsive-dropdown" style="min-width: 12rem;">
              <a class="text-sm py-2 px-4 font-normal block w-full whitespace-no-wrap bg-transparent text-gray-800"
                href="/profile">Profile</a><a
                class="text-sm py-2 px-4 font-normal block w-full whitespace-no-wrap bg-transparent text-gray-800"
                href="#pablo">Other Stuff</a><a
                class="text-sm py-2 px-4 font-normal block w-full whitespace-no-wrap bg-transparent text-gray-800"
                href="#pablo">Something else here</a>
              <div class="h-0 my-2 border border-solid border-gray-200"></div>
              <a class="text-sm py-2 px-4 font-normal block w-full whitespace-no-wrap bg-transparent text-gray-800"
                href="/auth/logout">Logout</a>
            </div>
          </li>
        <% } else { %>

          <li class="flex items-center">
            <a class="bg-white text-gray-800 text-xs font-bold uppercase px-4 py-2 rounded shadow outline-none ml-3 mb-3 active:bg-gray-100 hover:shadow-md focus:outline-none lg:mr-1 lg:mb-0"
              type="button" style="transition: all 0.15s ease 0s;" href="/auth/login"><i class="fas fa-user"></i>
              Login</a>
          </li>
        <% } %>
      </ul>
    </div>
  </div>
</nav>
<script>
    function toggleNavbar(collapseID) {
        document.getElementById(collapseID).classList.toggle("hidden");
        document.getElementById(collapseID).classList.toggle("block");
      }
      /* Function for dropdowns */
      function openDropdown(event, dropdownID) {
        let element = event.target;
        while (element.nodeName !== "A") {
          element = element.parentNode;
        }
        var popper = new Popper(element, document.getElementById(dropdownID), {
          placement: "bottom-end"
        });
        document.getElementById(dropdownID).classList.toggle("hidden");
        document.getElementById(dropdownID).classList.toggle("block");
      }

      toastr.options = {
        "closeButton": true,
        "positionClass": "toast-top-center",
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "5000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
      }
</script>

<% if(errors.length > 0) { %>
  <script>
      const errors = "!{errors.join(",")}";
      toastr["error"](errors, "Oops - there's a problem")
  </script>
<%}%>
<% if(info.length > 0) {%>
  <script>
        const info = "!{info.join(",")}";
        toastr["info"](info, "Yay!");
  </script>
<%}%>